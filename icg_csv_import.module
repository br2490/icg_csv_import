<?php

/**
 * Include batch.inc when module loads.  Required for batch processing!
 */
function icg_csv_import_init( ) {
  module_load_include('inc', 'icg_csv_import', 'includes/batch');
  
  // Turn on error reporting.
  error_reporting(E_ALL);
  ini_set('display_errors', TRUE);
  ini_set('display_startup_errors', TRUE);

  // Explicitly set auto detection of line endings by PHP!
  ini_set('auto_detect_line_endings', TRUE);
}

/**
 * ICG CSV Import Menu
 * 
 * @return array
 */
function icg_csv_import_menu() {
  $items = array();
  $items['islandora/object/%islandora_object/manage/csv-import'] = array(
    'title' => t('CSV Import'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('icg_csv_import_form', 2),
    'access arguments' => array(2),
    'access callback' => 'icg_csv_access_callback',
    'file' => 'includes/map_ingest_form.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * ICG CSV Menu Item Access Callback
 */
function icg_csv_access_callback($object) {
  if (user_access('ingest fedora objects')) {
    $relation = '';
    $collection_models = islandora_basic_collection_get_collection_content_models();
    $collection_predicates = array(
      'isMemberOfCollection',
      'isMemberOf',
    );
    $is_a_collection = count(array_intersect($collection_models, $object->models)) > 0;
    return $is_a_collection;
  }
  return FALSE;
}

/**
 * Implements hook_fetch_OBJ.
 */
function icg_csv_import_fetch_OBJ($path, $credentials) {

  $ftp_username = $credentials['username']; 
  $ftp_userpass = $credentials['password'];  

  $module_name = basename(__FILE__, '.module');

  // Explode the $path... should be of the form server:/dir1/dir2/dir3/filename.ext
  list($server, $rest) = explode(':', $path, 2);
  $parts = pathinfo($rest);
  $ftp_directory = $parts['dirname'];
  $filename = $parts['basename'];

  // Set up a basic connection.
  $conn_id = ftp_ssl_connect($server, 21, 180);
  if (!$conn_id) {
    watchdog($module_name, "FTP connection to server '%server' failed!", array('%server' => $server), WATCHDOG_ERROR);
    return FALSE;
  }

  // Login with the specified FTP username and password.
  $login_result = ftp_login($conn_id, $ftp_username, $ftp_userpass);
  if (!$login_result) {
    watchdog($module_name, "FTP login failed!", array( ), WATCHDOG_ERROR);
    return FALSE;
  }

  // Set FTP to passive mode.
  ftp_pasv($conn_id, TRUE);

  // Attempt to change the remote directory as specified.
  $change_dir = ftp_chdir($conn_id, $ftp_directory);
  if (!$change_dir) {
    watchdog($module_name, "FTP chdir to '%directory' failed!", array('%directory' => $ftp_directory), WATCHDOG_ERROR);
    die("ftp_chdir failed!");
    return FALSE;
  } else {
    $txt = "Current directory is: " . ftp_pwd($conn_id);
    watchdog($module_name, $txt, array( ), WATCHDOG_INFO);
  }

  // Fetch a file via FTP.
  $temp_file = drupal_tempnam('temporary://', 'import_content_');   // open a temp file
  if (!ftp_get($conn_id, $temp_file, $filename, FTP_BINARY)) {
    watchdog($module_name, "Could not download file '%filename' via FTP.", array('%filename' => $filename), WATCHDOG_ERROR);
    return FALSE;
  }

  return $temp_file;
}

